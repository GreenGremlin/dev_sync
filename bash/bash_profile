# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
export BASH_CONF="bash_profile"

export HOMEBREW_GITHUB_API_TOKEN="6095ad71e3a744c975f142607a4335df8d87cb48"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CODE_DIR="/users/jonathan/code"

export PYTHONPATH="/Users/jonathan/lib/python2.7/site-packages/:$PYTHONPATH"
export WORKON_HOME=~/.virtualenvs

if [ -f "/Users/jonathan/bin/virtualenvwrapper_lazy.sh" ]; then
    . "/Users/jonathan/bin/virtualenvwrapper_lazy.sh"
fi

if [ -f "$DIR/bash_colors" ]; then
    . "$DIR/bash_colors"
fi

#OS X specific
export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color)
    color_prompt=yes;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

#used in the prompt command below to display what git branch i'm in.
function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

PS1="$Blue\w$Purple \$(parse_git_branch)\n$Color_Reset$"

# If an ssh client or connection
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
    PS1="$Red\u$Color_Reset@$BRed\h$Color_Reset: $PS1"
fi

if [ -n "$debian_chroot" ]; then
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}$PS1"
fi
unset color_prompt force_color_prompt


# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f "$DIR/bash_functions" ]; then
    . "$DIR/bash_functions"
fi

if [ -f "$DIR/bash_aliases" ]; then
    . "$DIR/bash_aliases"
fi

if [ -f "$CODE_DIR/expertise/config_templates/expertise.bashrc" ]; then
    . "$CODE_DIR/expertise/config_templates/expertise.bashrc"
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

if [ -f ~/Scripts/.git-completion.bash ]; then
    . ~/Scripts/.git-completion.bash
fi

if [ -f ~/.bashrc ]; then
    . ~/.bashrc
fi

# autocompletion
if type "grunt" > /dev/null; then
    eval "$(grunt --completion=bash)"
fi

if type "gulp" > /dev/null; then
    eval "$(gulp --completion=bash)"
fi

export EDITOR="vim"

if [ -f ~/bin/subl ]; then
    export VISUAL="$HOME/bin/subl"
fi

# Sets the title of my terminal. This is important if you use tabs. Notice that the git branch
# is at the beginning

case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;$(parse_git_branch)$(pwd)\007"'
    ;;
*)
    ;;
esac

[[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # This loads NVM

